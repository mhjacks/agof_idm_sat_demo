---
- name: "Sync unless skip_sync == true"
  block:

  - name: "Get the unique list of mandatory products"
    set_fact:
      products_to_sync: "{{ repos_mandatory | map(attribute='product') | list | unique }}"

  - debug:
      var: products_to_sync

  - name: "Sync the mandatory products with the CDN"
    redhat.satellite.repository_sync:
      username: "{{ satellite_admin_username }}"
      password: "{{ satellite_admin_password }}"
      server_url: "{{ satellite_url }}"
      organization: "{{ satellite_initial_organization }}"
      validate_certs: "{{ satellite_validate_certs }}"
      product: "{{ item }}"
    loop: "{{ products_to_sync }}"
    async: "{{ async_timeout }}"
    poll: 0
    register: async_update

  - name: "Check on mandatory product sync"
    async_status:
      jid: "{{ async_update.ansible_job_id }}"
    register: job_result
    until: job_result.finished
    retries: "{{ ( async_timeout / async_delay ) | int }}"
    delay: "{{ async_delay }}"

  - name: "Get the unique list of optional products"
    set_fact:
      products_to_sync: "{{ repos_optional | map(attribute='product') | list | unique }}"

  - name: "Sync the optional products"
    redhat.satellite.repository_sync:
      username: "{{ satellite_admin_username }}"
      password: "{{ satellite_admin_password }}"
      server_url: "{{ satellite_url }}"
      organization: "{{ satellite_initial_organization }}"
      validate_certs: "{{ satellite_validate_certs }}"
      product: "{{ item }}"
    loop: "{{ products_to_sync }}"
    async: "{{ async_timeout }}"
    poll: 0
    register: async_update

  - name: "Check on optional product sync"
    async_status:
      jid: "{{ async_update.ansible_job_id }}"
    register: job_result
    until: job_result.finished
    retries: "{{ ( async_timeout / async_delay ) | int }}"
    delay: "{{ async_delay }}"

  - name: "Get the unique list of custom products"
    set_fact:
      products_to_sync: "{{ custom_products | map(attribute='name') | list | unique }}"

  - name: "Sync the custom products"
    redhat.satellite.repository_sync:
      username: "{{ satellite_admin_username }}"
      password: "{{ satellite_admin_password }}"
      server_url: "{{ satellite_url }}"
      organization: "{{ satellite_initial_organization }}"
      validate_certs: "{{ satellite_validate_certs }}"
      product: "{{ item }}"
    loop: "{{ products_to_sync }}"
    async: "{{ async_timeout }}"
    poll: 0
    register: async_update

  - name: "Check on custom product sync"
    async_status:
      jid: "{{ async_update.ansible_job_id }}"
    register: job_result
    until: job_result.finished
    retries: "{{ ( async_timeout / async_delay ) | int }}"
    delay: "{{ async_delay }}"

  when: skip_sync == false
  tags:
  - tags_start_sync
